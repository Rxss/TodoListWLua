local todo_file = "todo.txt"

local function load_tasks()
  local tasks = {}
  local f = io.open(todo_file, "r")
  if f then
    for line in f:lines() do
      table.insert(tasks, line)
    end
    f:close()
  end
  return tasks
end

local function save_tasks(tasks)
  local f = io.open(todo_file, "w")
  for _, task in ipairs(tasks) do
    f:write(task .. "\n")
  end
  f:close()
end

local function list_tasks(tasks)
  if #tasks == 0 then
    print "No Tasks."
    return
  end
  for i, task in ipairs(tasks) do
    print(i .. ". " .. task)
  end
end

local function add_task(tasks)
  io.write "Enter new task: "
  io.flush()
  local task = io.read()
  if task and #task > 0 then
    table.insert(tasks, "[ ] " .. task)
  end
end

local function toggleTask(tasks)
  list_tasks(tasks)
  io.write "Enter Task to toggle completion: "
  io.flush()
  local input = io.read()
  local taskNum = tonumber(input)
  if taskNum and taskNum >= 1 and taskNum <= #tasks then
    local task = tasks[taskNum]
    if task:sub(1, 4) == "[ ] " then
      tasks[taskNum] = "[x] " .. task:sub(4)
    elseif tasks:sub(1, 4) == "[x] " then
      tasks[taskNum] = "[ ] " .. task:sub(4)
    else
      print "Invalid task format."
    end
  end
end

local function remove_task(tasks)
  list_tasks(tasks)
  io.write "Enter task number to remove: "
  io.flush()
  local input = io.read()
  local taskNum = tonumber(input)
  if taskNum and taskNum >= 1 and taskNum <= #tasks then
    table.remove(tasks, taskNum)
  elseif input then
    print("invalid task number:" .. input)
  end
end

local tasks = load_tasks()
while true do
  print "\n[1] List [2] Add [3] Remove [4] Toggle completion [5] Save & Exit"
  io.write "Choose an option: "
  io.flush()
  local choice = io.read()
  if choice == "1" then
    list_tasks(tasks)
  elseif choice == "2" then
    add_task(tasks)
  elseif choice == "3" then
    remove_task(tasks)
  elseif choice == "4" then
    toggleTask(tasks)
  elseif choice == "5" then
    save_tasks(tasks)
    print "Saved, Bye!"
    break
  else
    print("Invalid option:" .. (choice or "<nil>"))
  end
end
